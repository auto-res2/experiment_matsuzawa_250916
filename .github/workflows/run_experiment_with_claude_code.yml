name: Fully Autonomous Experiment by Claude Code

on:
  workflow_dispatch:
    inputs:
      experiment_iteration:
        description: "Iteration count"
        required: true
      runner_type:
        description: 'Runner type (e.g., ["ubuntu-latest"], ["self-hosted", "A100"])'
        required: true
        default: '["ubuntu-latest"]'

permissions:
  # id-token: write
  contents: write

defaults:
  run:
    shell: bash

jobs:
  autonomous-experiment-and-fix:
    name: Autonomous Experiment and Fix Cycle
    runs-on: ${{ fromJSON(github.event.inputs.runner_type) }}
    timeout-minutes: 6000

    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv and dependencies
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.11"
          enable-cache: false
      # 権限が必要な可能性のある uv sync は先に行う
      - name: Install dependencies
        run: uv sync

      - name: Prepare iteration dir
        run: |
          iteration_dir=".research/iteration${{ github.event.inputs.experiment_iteration }}"
          mkdir -p "$iteration_dir"
          echo "ITERATION_DIR=$iteration_dir" >> "$GITHUB_ENV"

      # ★★★ ここからが核心 ★★★
      # AIに完全な自律実行ループを委任する
      - name: Claude Code Autonomous Run, Fix, and Validate Loop
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            You are a fully autonomous agent. Your task is to ensure the experiment code runs successfully by executing, analyzing, fixing, and re-validating it.
            You have been granted full tool access.

            1.  Run Smoke Test: Execute the command 
            ```bash
            uv run python -m src.main --smoke-test \
              > >(tee -a "${{ env.ITERATION_DIR }}/output.txt") \
              2> >(tee -a "${{ env.ITERATION_DIR }}/error.txt" >&2)
            echo "=== [PHASE 1/2] Smoke test PASSED $(date -u) ===" | tee -a "${{ env.ITERATION_DIR }}/output.txt"
            ```
            
            2.  Analyze & Fix: If the command fails, you MUST analyze the error, use your tools to fix the code, and then commit the changes.
            3.  Loop until Success: Repeat step 1 and 2 until the smoke test passes.

            4.  Run Full Experiment: Once the smoke test passes, execute 
            ```bash
            if [ -n "${{ env.ITERATION_DIR }}" ] && [ -d "${{ env.ITERATION_DIR }}" ]; then
              find "${{ env.ITERATION_DIR }}" -mindepth 1 -delete
            fi

            uv run python -m src.main --full-experiment \
              > >(tee -a "${{ env.ITERATION_DIR }}/output.txt") \
              2> >(tee -a "${{ env.ITERATION_DIR }}/error.txt" >&2)
            echo "=== [PHASE 2/2] Full experiment end $(date -u) ===" | tee -a "${{ env.ITERATION_DIR }}/output.txt"
            ```
            5.  **Final Fix Loop:** If the full experiment fails, repeat the analyze, fix, and re-run cycle until it succeeds.
            6.  **Commit all fixes** you make with a message like "[Claude Fix] Automated code correction".

            Execute all steps autonomously. Do not ask for permission.
          
          claude_args: "--max-turns=50 --allowed-tools Bash,Write,Edit,MultiEdit,TodoWrite"

      - name: Commit and push experiment results (Fallback)
        if: always()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .research/
          
          if ! git diff --staged --quiet; then
            git commit -m "Add experiment results (iteration ${{ github.event.inputs.experiment_iteration }})"
            for i in {1..5}; do
              git push && break
              echo "Push failed on attempt $i. Retrying in $((2**i)) seconds..."
              sleep $((2**i))
            done
          else
            echo "No new experiment results to commit."
          fi
