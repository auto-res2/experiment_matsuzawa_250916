[build-system]
requires = ["setuptools>=61.0", "torch"]
build-backend = "setuptools.build_meta"

[project]
name = "meta-leap-research"
version = "0.1.0"
description = "Experiments for META-LEAP research paper."
authors = [{name = "AI Researcher", email = "researcher@example.com"}]

dependencies = [
    "torch>=2.1.0",
    "torch-geometric>=2.5.0",
    # GraphSAINT relies on torch-sparse/SparseTensor.
    "torch-sparse>=0.6.18",
    "ogb>=1.3.6",
    "transformers>=4.36.0",
    "scikit-learn>=1.3.0",
    "PyYAML>=6.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.13.0",
    "pynvml>=11.5.0",
    "scipy>=1.11.0",
    "pandas>=2.1.0",
    "tqdm>=4.66.0",
    "requests>=2.31.0"
]

# -----------------------------------------------------------------------------
#  uv-specific section
# -----------------------------------------------------------------------------
# `torch-sparse`'s setup script imports `torch` during build, but it does **not**
# declare it as a build-time requirement.  When uv (or PEP-517 front-ends that
# perform isolated builds) tries to build the wheel, the import fails and the
# installation aborts.  The following stanza instructs uv to inject `torch`
# into the build environment **before** compiling `torch-sparse`, thereby
# preventing the missing-dependency error and allowing us to use the official
# pre-built wheels when available.

[tool.uv.extra-build-dependencies]
"torch-sparse" = ["torch"]
